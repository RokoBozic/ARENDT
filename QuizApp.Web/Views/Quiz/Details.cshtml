@model QuizApp.Core.ViewModels.QuizViewModel

@{
    ViewData["Title"] = "Quiz Details";
    Layout = "_Layout";
}

<div class="container">
    <div class="row justify-content-center">
        <div class="col-lg-8">
            <div class="card fade-in">
                <div class="card-body">
                    <div class="text-center mb-4">
                        <i class="fas fa-clipboard-list fa-4x mb-3" style="color: var(--primary-color);"></i>
                        <h2 class="card-title">@Model.Title</h2>
                        <p class="text-muted">@Model.Description</p>
                    </div>

                    <div class="row mb-4">
                        <div class="col-md-6">
                            <div class="info-group">
                                <label class="text-muted">Time Limit</label>
                                <p class="h5"><i class="fas fa-clock me-2"></i>@Model.TimeLimit</p>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="info-group">
                                <label class="text-muted">Status</label>
                                <p class="h5">
                                    @if (Model.IsActive)
                                    {
                                        <span class="badge bg-success"><i class="fas fa-check-circle me-1"></i>Active</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-secondary"><i class="fas fa-times-circle me-1"></i>Inactive</span>
                                    }
                                </p>
                            </div>
                        </div>
                    </div>

                    <div class="questions-section">
                        <h3 class="mb-4">Questions</h3>
                        @foreach (var question in Model.Questions)
                        {
                            <div class="card mb-3 question-card">
                                <div class="card-body">
                                    <div class="d-flex justify-content-between align-items-center mb-3">
                                        <h5 class="card-title mb-0">@question.Text</h5>
                                        <span class="badge bg-primary">@question.Points points</span>
                                    </div>

                                    <div class="answers-list">
                                        @foreach (var answer in question.Answers)
                                        {
                                            <div class="answer-item @(answer.IsCorrect ? "correct" : "incorrect") mb-2">
                                                <i class="fas @(answer.IsCorrect ? "fa-check-circle text-success" : "fa-times-circle text-danger") me-2"></i>
                                                @answer.Text
                                            </div>
                                        }
                                    </div>
                                </div>
                            </div>
                        }
                    </div>

                    <div class="d-grid gap-2 mt-4">
                        <a href="@Url.Action("Edit", new { id = ViewContext.RouteData.Values["id"] })" class="btn btn-primary">
                            <i class="fas fa-edit me-2"></i>Edit Quiz
                        </a>
                        <a href="@Url.Action("Index", "Home")" class="btn btn-outline-light">
                            <i class="fas fa-arrow-left me-2"></i>Back to Home
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    @@keyframes fadeIn {
        0% { 
            opacity: 0; 
            transform: translateY(20px); 
        }
        100% { 
            opacity: 1; 
            transform: translateY(0); 
        }
    }

    .fade-in {
        animation: fadeIn 0.5s ease-in;
    }

    .question-card {
        background-color: #363636;
        border: 2px solid var(--primary-color);
        transition: transform 0.2s;
    }

    .question-card:hover {
        transform: translateY(-2px);
    }

    .answer-item {
        padding: 0.5rem;
        border-radius: 4px;
        background-color: #2d2d2d;
    }

    .answer-item.correct {
        border-left: 4px solid var(--success-color);
    }

    .answer-item.incorrect {
        border-left: 4px solid var(--danger-color);
    }

    .info-group {
        background-color: #2d2d2d;
        padding: 1rem;
        border-radius: 4px;
        height: 100%;
    }

    .info-group label {
        font-size: 0.875rem;
        margin-bottom: 0.5rem;
    }

    .info-group p {
        margin-bottom: 0;
    }
</style> 